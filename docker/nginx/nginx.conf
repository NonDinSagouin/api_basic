events {
    worker_connections 1024;
}

http {
    upstream flask_app {
        server flask-api:5000;
    }

    # Configuration pour HTTP (redirection vers HTTPS)
    server {
        listen 80;
        server_name 137.74.193.55 www.137.74.193.55;
        
        # Redirection vers HTTPS
        return 301 https://$server_name$request_uri;
    }

    # Configuration pour HTTPS
    server {
        listen 443 ssl http2;
        server_name 137.74.193.55 www.137.74.193.55;

        # Configuration SSL (à configurer avec vos certificats)
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/private.key;
        
        # Configuration SSL moderne
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # Headers de sécurité
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";

        # Configuration du proxy vers Flask
        location / {
            proxy_pass http://flask_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Endpoint de santé pour le monitoring
        location /health {
            proxy_pass http://flask_app/health;
            access_log off;
        }

        # Configuration pour les fichiers statiques (si nécessaire)
        location /static/ {
            proxy_pass http://flask_app/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }

    # Configuration temporaire pour HTTP seulement (développement)
    server {
        listen 80;
        server_name localhost;

        location / {
            proxy_pass http://flask_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
